//======================================================================================/** \file  task_logic.cc *  Task which controls the overall logic of the camera project * *  Revisions: *    \li  05-31-08  Created file * *  License: *    This file released under the Lesser GNU Public License. The program is intended *    for educational use only, but its use is not restricted thereto.  *///======================================================================================char task_logic::run(char state){	switch(state){		case(INIT):			// If 			if(motor_task->get_position() == 355 && sensor_task->reading_taken()){				sensor_task->clear_reading_taken();				return(WAITING);			}			else if(sensor_task->reading_taken()){				motor_task->set_position(motor_task->get_position() + 5);				sensor_task->clear_reading_taken();				return(GETTING_INIT_READING);			}			break;		case(GETTING_INIT_READING):			if(motor_task->position_stable()){				sensor_task->take_reading();				return(INIT);			}			break;		case(WAITING):			if(change_detected){				send_coordinate_flag = true;				return(TAKE_PICTURE);			}			else if(position_stablized_flag = true){			}			else if(reading_taken){				desired_position = ((desired_position + 5) % 360);				new_motor_position_flag = true;			}		case(TAKE_PICTURE):			solenoid->take_picture();